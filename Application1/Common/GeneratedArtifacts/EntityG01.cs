

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Lab : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Lab entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Lab()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Lab(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Lab> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Lab.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Lab_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Lab_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Lab.DetailsClass.GetValue(this, global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Lab.DetailsClass.SetValue(this, global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime DateIssued
        {
            get
            {
                return global::LightSwitchApplication.Lab.DetailsClass.GetValue(this, global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.DateIssued);
            }
            set
            {
                global::LightSwitchApplication.Lab.DetailsClass.SetValue(this, global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.DateIssued, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateIssued_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateIssued_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateIssued_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> BloodCellCount
        {
            get
            {
                return global::LightSwitchApplication.Lab.DetailsClass.GetValue(this, global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.BloodCellCount);
            }
            set
            {
                global::LightSwitchApplication.Lab.DetailsClass.SetValue(this, global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.BloodCellCount, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BloodCellCount_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BloodCellCount_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BloodCellCount_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> EyeLashes
        {
            get
            {
                return global::LightSwitchApplication.Lab.DetailsClass.GetValue(this, global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.EyeLashes);
            }
            set
            {
                global::LightSwitchApplication.Lab.DetailsClass.SetValue(this, global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.EyeLashes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EyeLashes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EyeLashes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EyeLashes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int LuckyNumber
        {
            get
            {
                return global::LightSwitchApplication.Lab.DetailsClass.GetValue(this, global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.LuckyNumber);
            }
            set
            {
                global::LightSwitchApplication.Lab.DetailsClass.SetValue(this, global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.LuckyNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LuckyNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LuckyNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LuckyNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Person Person
        {
            get
            {
                return global::LightSwitchApplication.Lab.DetailsClass.GetValue(this, global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.Person);
            }
            set
            {
                global::LightSwitchApplication.Lab.DetailsClass.SetValue(this, global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.Person, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Person_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Person_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Person_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Lab,
                global::LightSwitchApplication.Lab.DetailsClass,
                global::LightSwitchApplication.Lab.DetailsClass.IImplementation,
                global::LightSwitchApplication.Lab.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass>.Entry
                __LabEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass>.Entry(
                    global::LightSwitchApplication.Lab.DetailsClass.__Lab_CreateNew,
                    global::LightSwitchApplication.Lab.DetailsClass.__Lab_Created,
                    global::LightSwitchApplication.Lab.DetailsClass.__Lab_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Lab __Lab_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Lab> es)
            {
                return new global::LightSwitchApplication.Lab(es);
            }
            private static void __Lab_Created(global::LightSwitchApplication.Lab e)
            {
                e.Lab_Created();
            }
            private static bool __Lab_AllowSaveWithErrors(global::LightSwitchApplication.Lab e)
            {
                bool result = false;
                e.Lab_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Lab.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.DateTime> DateIssued
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.DateIssued) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.Nullable<int>> BloodCellCount
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.BloodCellCount) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.Nullable<decimal>> EyeLashes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.EyeLashes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, int> LuckyNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.LuckyNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::LightSwitchApplication.Person> Person
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.Person) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::LightSwitchApplication.Person>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new global::System.DateTime DateIssued { get; set; }
                new global::System.Nullable<int> BloodCellCount { get; set; }
                new global::System.Nullable<decimal> EyeLashes { get; set; }
                new int LuckyNumber { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Person { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Lab.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, int>.Data> c, global::LightSwitchApplication.Lab.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Lab e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Lab e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Lab e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.DateTime>.Entry
                    DateIssued = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.DateTime>.Entry(
                        "DateIssued",
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._DateIssued_Stub,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._DateIssued_ComputeIsReadOnly,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._DateIssued_Validate,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._DateIssued_GetImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._DateIssued_SetImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._DateIssued_OnValueChanged);
                private static void _DateIssued_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Lab.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Lab.DetailsClass d, object sf)
                {
                    c(d, ref d._DateIssued, sf);
                }
                private static bool _DateIssued_ComputeIsReadOnly(global::LightSwitchApplication.Lab e)
                {
                    bool result = false;
                    e.DateIssued_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateIssued_Validate(global::LightSwitchApplication.Lab e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateIssued_Validate(r);
                }
                private static global::System.DateTime _DateIssued_GetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d)
                {
                    return d.ImplementationEntity.DateIssued;
                }
                private static void _DateIssued_SetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.DateIssued = global::LightSwitchApplication.Lab.DetailsClass.TruncateDate(v);
                }
                private static void _DateIssued_OnValueChanged(global::LightSwitchApplication.Lab e)
                {
                    e.DateIssued_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.Nullable<int>>.Entry
                    BloodCellCount = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.Nullable<int>>.Entry(
                        "BloodCellCount",
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._BloodCellCount_Stub,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._BloodCellCount_ComputeIsReadOnly,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._BloodCellCount_Validate,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._BloodCellCount_GetImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._BloodCellCount_SetImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._BloodCellCount_OnValueChanged);
                private static void _BloodCellCount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Lab.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Lab.DetailsClass d, object sf)
                {
                    c(d, ref d._BloodCellCount, sf);
                }
                private static bool _BloodCellCount_ComputeIsReadOnly(global::LightSwitchApplication.Lab e)
                {
                    bool result = false;
                    e.BloodCellCount_IsReadOnly(ref result);
                    return result;
                }
                private static void _BloodCellCount_Validate(global::LightSwitchApplication.Lab e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BloodCellCount_Validate(r);
                }
                private static global::System.Nullable<int> _BloodCellCount_GetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d)
                {
                    return d.ImplementationEntity.BloodCellCount;
                }
                private static void _BloodCellCount_SetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.BloodCellCount = v;
                }
                private static void _BloodCellCount_OnValueChanged(global::LightSwitchApplication.Lab e)
                {
                    e.BloodCellCount_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.Nullable<decimal>>.Entry
                    EyeLashes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "EyeLashes",
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._EyeLashes_Stub,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._EyeLashes_ComputeIsReadOnly,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._EyeLashes_Validate,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._EyeLashes_GetImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._EyeLashes_SetImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._EyeLashes_OnValueChanged);
                private static void _EyeLashes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Lab.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Lab.DetailsClass d, object sf)
                {
                    c(d, ref d._EyeLashes, sf);
                }
                private static bool _EyeLashes_ComputeIsReadOnly(global::LightSwitchApplication.Lab e)
                {
                    bool result = false;
                    e.EyeLashes_IsReadOnly(ref result);
                    return result;
                }
                private static void _EyeLashes_Validate(global::LightSwitchApplication.Lab e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EyeLashes_Validate(r);
                }
                private static global::System.Nullable<decimal> _EyeLashes_GetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d)
                {
                    return d.ImplementationEntity.EyeLashes;
                }
                private static void _EyeLashes_SetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.EyeLashes = v;
                }
                private static void _EyeLashes_OnValueChanged(global::LightSwitchApplication.Lab e)
                {
                    e.EyeLashes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, int>.Entry
                    LuckyNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, int>.Entry(
                        "LuckyNumber",
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._LuckyNumber_Stub,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._LuckyNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._LuckyNumber_Validate,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._LuckyNumber_GetImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._LuckyNumber_SetImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._LuckyNumber_OnValueChanged);
                private static void _LuckyNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Lab.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, int>.Data> c, global::LightSwitchApplication.Lab.DetailsClass d, object sf)
                {
                    c(d, ref d._LuckyNumber, sf);
                }
                private static bool _LuckyNumber_ComputeIsReadOnly(global::LightSwitchApplication.Lab e)
                {
                    bool result = false;
                    e.LuckyNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _LuckyNumber_Validate(global::LightSwitchApplication.Lab e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LuckyNumber_Validate(r);
                }
                private static int _LuckyNumber_GetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d)
                {
                    return d.ImplementationEntity.LuckyNumber;
                }
                private static void _LuckyNumber_SetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d, int v)
                {
                    d.ImplementationEntity.LuckyNumber = v;
                }
                private static void _LuckyNumber_OnValueChanged(global::LightSwitchApplication.Lab e)
                {
                    e.LuckyNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::LightSwitchApplication.Person>.Entry
                    Person = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::LightSwitchApplication.Person>.Entry(
                        "Person",
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Person_Stub,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Person_ComputeIsReadOnly,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Person_Validate,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Person_GetCoreImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Person_GetImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Person_SetImplementationValue,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Person_Refresh,
                        global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties._Person_OnValueChanged);
                private static void _Person_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Lab.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::LightSwitchApplication.Person>.Data> c, global::LightSwitchApplication.Lab.DetailsClass d, object sf)
                {
                    c(d, ref d._Person, sf);
                }
                private static bool _Person_ComputeIsReadOnly(global::LightSwitchApplication.Lab e)
                {
                    bool result = false;
                    e.Person_IsReadOnly(ref result);
                    return result;
                }
                private static void _Person_Validate(global::LightSwitchApplication.Lab e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Person_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Person_GetCoreImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d)
                {
                    return d.ImplementationEntity.Person;
                }
                private static global::LightSwitchApplication.Person _Person_GetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Person, global::LightSwitchApplication.Person.DetailsClass>(global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.Person, ref d._Person);
                }
                private static void _Person_SetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass d, global::LightSwitchApplication.Person v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.Person, ref d._Person, (i, ev) => i.Person = ev, v);
                }
                private static void _Person_Refresh(global::LightSwitchApplication.Lab.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Lab.DetailsClass.PropertySetProperties.Person, ref d._Person);
                }
                private static void _Person_OnValueChanged(global::LightSwitchApplication.Lab e)
                {
                    e.Person_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.DateTime>.Data _DateIssued;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.Nullable<int>>.Data _BloodCellCount;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::System.Nullable<decimal>>.Data _EyeLashes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, int>.Data _LuckyNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Lab, global::LightSwitchApplication.Lab.DetailsClass, global::LightSwitchApplication.Person>.Data _Person;
            
        }
    
        #endregion
    }
    
    #endregion
}
